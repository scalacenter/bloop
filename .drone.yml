# We publishLocal the maven plugin instead of compile to check the maven plugin integration
# Only test sbt-bloop 1.x because of bug in `^`
matrix:
  SBT_RUN:
    - sbt "benchmarks/compile" \
          "jsonConfig/test" \
          "sbtBloop/scripted" \
          "frontend/integrationSetUpBloop" \
          "backend/test" \
          "frontend/test" \
          "docs/makeSite"

  SBT_PUBLISH:
    - sbt "set pgpPublicRing in Global := file(\"/drone/.gnupg/pubring.asc\")" \
          "set pgpSecretRing in Global := file(\"/drone/.gnupg/secring.asc\")" \
          "docs/ghpagesPushSite" \
          "releaseBloop"

  SBT_RELEASE:
    - sbt "frontend/updateHomebrewFormula" \
          "frontend/githubRelease"
  OS:
    - windows
    - linux

clone:
  git:
    image: plugins/git
    tags: true
    # We clone the submodules ourselves
    recursive: false
    depth: 50

pipeline:
  clone:
    image: plugins/git
    when:
      ref: [ refs/heads/master, refs/tags/*, refs/pull/*/head ]
      matrix:
        OS: linux
    commands:
      - ./bin/ci-clone.sh

  restore_cache:
    image: appleboy/drone-sftp-cache
    when:
      ref: [ refs/heads/master, refs/tags/*, refs/pull/*/head ]
      matrix:
        OS: linux
    secrets: [ sftp_cache_username, sftp_cache_private_key, sftp_cache_server, sftp_cache_path ]
    restore: true
    mount:
      - /drone/.ivy2/cache
      - /drone/.coursier
      - /drone/.sbt

  build:
    image: scalacenter/scala-docs:1.1
    group: build
    when:
      ref: [ refs/heads/master, refs/tags/*, refs/pull/*/head ]
      matrix:
        OS: linux
    commands:
      - export DRONE_DIR="/drone"
      - git log | head -n 20
      - ./bin/add-coursier.sh
      - . bin/detect-community-build.sh # We need to source it for the env variable to be exported
      - ${SBT_RUN}; ./bin/ci-clean-cache.sh

  build_windows:
    group: build
    image: scalacenter/scala-docs:1.0
    when:
      ref: [ refs/heads/master, refs/tags/*, refs/pull/*/head ]
      matrix:
        OS: windows
    secrets: [ bloop_jenkins_token ]
    commands:
      - ./bin/stream-jenkins-log.sh "bloop:$BLOOP_JENKINS_TOKEN"

  publish:
    image: scalacenter/scala-docs:1.1
    secrets: [ sonatype_user, sonatype_password, pgp_password, bintray_user, bintray_pass, bloopoid_private_key ]
    volumes:
      - /scalacenter:/keys
    when:
      ref: [ refs/heads/master, refs/tags/* ]
      event: [ push, tag, deployment ]
      status: success
      matrix:
        OS: linux
    commands:
      - git log | head -n 20
      # I have no idea why this has to be done manually... TODO: inspect why.
      - export DRONE_DIR="/drone"
      - ./bin/add-coursier.sh
      - /usr/local/bin/setup_keys.sh
      - ./bin/ci-setup-bloopoid-keys.sh
      - ${SBT_PUBLISH}
      - ./bin/ci-clean-cache.sh

  release:
    image: scalacenter/scala-docs:1.1
    secrets: [ bloopoid_github_token ]
    volumes:
      - /scalacenter:/keys
    when:
      ref: [ refs/heads/master, refs/tags/* ]
      event: [ tag ]
      status: success
      matrix:
        OS: linux
    commands:
      - export DRONE_DIR="/drone"
      - ./bin/add-coursier.sh
      - echo "oauth = $BLOOPOID_GITHUB_TOKEN" > ~/.github
      - ${SBT_RELEASE}

  rebuild_cache:
    image: appleboy/drone-sftp-cache
    when:
      ref: [ refs/heads/master, refs/tags/*, refs/pull/*/head ]
      matrix:
        OS: linux
    secrets: [ sftp_cache_username, sftp_cache_private_key, sftp_cache_server, sftp_cache_path ]
    rebuild: true
    mount:
      - /drone/.ivy2/cache
      - /drone/.coursier
      - /drone/.sbt
